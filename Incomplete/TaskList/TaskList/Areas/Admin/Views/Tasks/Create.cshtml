@model TaskList.Models.ViewModels.TaskAndTaskCategoryViewModel
@using TaskList.Extensions

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>
<br />
<h2 class="text-info">Create Task</h2>
<br />

<partial name="_StatusMessage" model="Model.StatusMessage" />

<div class="border backgroundWhite row">
    <div class="col-8 border-right">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Tasks.TaskCategoryId" class="col-form-label"></label>
                </div>
                <div class="col-5">
                    <select id="ddlTasksCategorylist" asp-for="Tasks.TaskCategoryId" asp-items="Model.TaskCategoryList.ToSelectListItem(Model.Tasks.TaskCategoryId)" class="form-control"></select>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-3">
                    <label asp-for="Tasks.Name" class="col-form-label"></label>
                </div>
                <div class="col-5">
                    <input asp-for="Tasks.Name" class="form-control" />
                </div>
                <span asp-validation-for="Tasks.Name" class="text-danger"></span>
            </div>
            <div class="form-group row">
                <div class="col-5 offset-3">
                    <partial name="_CreateAndBackToListButton" />
                </div>
            </div>
        </form>
    </div>


</div>


@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
